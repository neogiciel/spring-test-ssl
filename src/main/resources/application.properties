spring.application.name=spring-test-ssl
server.port=8080
#server.port=443

#logging
spring.output.ansi.enabled=ALWAYS
logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %yellow(%msg%n)

#prod
#spring.ssl.bundle.jks.client.keystore.location=/tmp/keystore.jks
#spring.ssl.bundle.jks.client.keystore.password=secret
#spring.ssl.bundle.jks.client.truststore.location=/tmp/truststore.jks
#spring.ssl.bundle.jks.client.truststore.password=secret

#dev
#file:${TRUSTED_CA_PATH:/etc/ssl/certs/keystore.jks} 
#spring.ssl.bundle.jks.client.keystore.location=src/main/resources/cert-openssl/localhost.jks
spring.ssl.bundle.jks.client.keystore.location=src/main/resources/keystore.jks
spring.ssl.bundle.jks.client.keystore.password=secret
spring.ssl.bundle.jks.client.truststore.location=src/main/resources/truststore.jks
spring.ssl.bundle.jks.client.truststore.password=secret


# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:/client/client.p12
#server.ssl.key-store=/tmp/test8.p12
# The password used to generate the certificate
#server.ssl.key-store-password=secret
# The alias mapped to the certificate
#server.ssl.key-alias=test8
#server.ssl.enabled=true
#server.ssl.enabled=false
